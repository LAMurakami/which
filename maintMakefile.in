#=============================================================================
#
# Maintainer stuff; don't even LOOK at this - and when you E-mail me
# about it you'll get blacklisted }:-).
#
# I added it only here for other GNU maintainers to look at.
# In order to use this as-is, you'll need the following utilities:
#
# GNU make
# GNU which-2.x
# GNU awk
# GNU date
# GNU groff
# texi2html
# rcs2log
# cut
# grep
# egrep
# test
# sed
# head
# tail
#
# This maintainer Makefile provides the following functionality:
#
# Targets
# -------
#
# - release
#	Creates everything and puts it all in the release directory $(WWWDIR)
#       This target calls all of the below targets.
#	Note: You must `git commit' *before* calling this target!
#
# The remaining targets can be used to test a part of the distribution process,
# but are not really useful on their own otherwise.
#
# - html
#	Generates html-ized man page(s) (from @PACKAGE@.texi) and
#	the release front page index.html. index.html is generated by
#	replacing "!VERSION!" in index.html.in by @VERSION@.
#
# - README
#	Generate README file by replacing "!VERSION!" in README.in by
#	@VERSION@.
#
# - @PACKAGE@.1
#	Generate man page from @PACKAGE@.texi.

WWWDIR=/home/carlo/www/@PACKAGE@
TARGET=i386
REL=1
AUTHOR=Carlo Wood <carlo@gnu.org>
TAG:=${shell echo "V@VERSION@" | sed -e 's/\./_/g'}
PREVTAG:=${shell test -f $(srcdir)/.prevtag && cat $(srcdir)/.prevtag}
CVSREADACCESS:=${shell if test -f $(srcdir)/CVS/Entries; then echo "yes"; else echo "no"; fi}
WHICHTEST:=$(shell realpath "$(srcdir)/test/whichtest")
info_TEXINFOS = which.texi

test-values:
	@echo "WWWDIR        = \"$(WWWDIR)\""
	@echo "TARGET        = \"$(TARGET)\""
	@echo "REL           = \"$(REL)\""
	@echo "AUTHOR        = \"$(AUTHOR)\""
	@echo "TAG           = \"$(TAG)\""
	@echo "PREVTAG       = \"$(PREVTAG)\""
	@echo "PACKAGE       = \"@PACKAGE@\""
	@echo "VERSION       = \"@VERSION@\""
	@echo "WHICHTEST     = \"$(WHICHTEST)\""

## Make sure the ChangeLog is up to date in maintainer mode
.PHONY: release tar html

@PACKAGE@.1: $(srcdir)/@PACKAGE@.1.in $(srcdir)/@PACKAGE@.texi texinfo2man $(srcdir)/configure.ac
	./texinfo2man $(srcdir)/@PACKAGE@.1.in $(srcdir)/@PACKAGE@.texi > @PACKAGE@.1

texinfo2man: $(srcdir)/indent/man/texinfo2man.c
	$(CC) -g -o texinfo2man $(srcdir)/indent/man/texinfo2man.c

reconfig: $(top_builddir)/config.status
	$(top_builddir)/config.status --recheck
	$(top_builddir)/config.status

release: dist html NEWS
	install -m 644 index.html $(WWWDIR)
	install -m 644 $(srcdir)/NEWS $(WWWDIR)
	install -m 644 @PACKAGE@-@VERSION@.tar.gz $(WWWDIR)
	gpg -ab @PACKAGE@-@VERSION@.tar.gz
	echo "version: 1.2" > @PACKAGE@-@VERSION@.tar.gz.directive
	echo "directory: which" >> @PACKAGE@-@VERSION@.tar.gz.directive
	echo "filename: @PACKAGE@-@VERSION@.tar.gz" >> @PACKAGE@-@VERSION@.tar.gz.directive
	echo "comment: release of @VERSION@" >> @PACKAGE@-@VERSION@.tar.gz.directive
	gpg --clearsign @PACKAGE@-@VERSION@.tar.gz.directive
	(cd $(srcdir) && git tag --force $(TAG))
	@echo "*** To upload run:"
	@echo "$$ ncftpput ftp-upload.gnu.org /incoming/ftp @PACKAGE@-@VERSION@.tar.gz @PACKAGE@-@VERSION@.tar.gz.asc @PACKAGE@-@VERSION@.tar.gz.directive.asc"
	@echo "$$ echo \"$(TAG)\" > $(srcdir)/.prevtag"

##-----------------------------------------------------------------------------
## `which' specific generation:

html: EXAMPLES $(srcdir)/index.html.in $(srcdir)/configure.ac
	grep -B2000 '^MANPAGE' $(srcdir)/index.html.in \
		| sed -e 's%!VERSION!%@VERSION@%g;s%!OLD_TAG!%$(PREVTAG)%g;s%!NEW_TAG!%$(TAG)%g' \
		| grep -v '^MANPAGE' > index.html
	groff -c -man -Tascii which.1 | tail -n +3 | head -n -1 | sed "s/\x1B\[[0-9;]*[a-zA-Z]//g" >> index.html
	grep -A2000 '^MANPAGE' $(srcdir)/index.html.in | grep -v '^MANPAGE' | grep -B2000 '^EXAMPLES' | grep -v '^EXAMPLES' >> index.html
	cat EXAMPLES >> index.html
	grep -A2000 '^EXAMPLES' $(srcdir)/index.html.in | grep -v '^EXAMPLES' >> index.html

EXAMPLES: which
	( cd test; $(WHICHTEST) check; ) || exit 1;
	( cd test; $(WHICHTEST) generate; )
	cp $(srcdir)/test/.reference EXAMPLES

README: which.1 $(srcdir)/README.in $(srcdir)/configure.ac
	sed -e 's%!VERSION!%'`grep 's,@VERSION' config.status | cut -d, -f3`'%g' $(srcdir)/README.in > README
	groff -man -Tascii which.1 | sed -e 's/.//g' | head -n 61 | tail -n 58 >> README
	groff -man -Tascii which.1 | sed -e 's/.//g' | head -n 123 | tail -n 51 | grep -B2000 '^ ' >> README
