.TH WHICH 1
.rn RS Rs
.de RS
.na
.nf
.Rs
..
.rn RE Re
.de RE
.Re
.fi
.ad
..
.de Sx
.PP
.ne \\$1
.RS
..
.de Ex
.RE
.PP
..
.na
.SH NAME
which \- show full path of commands
.SH SYNOPSIS
.B which
[options] [\-\-] programname [...]
.SH DESCRIPTION
.BR Which
takes one or more arguments.  For each of its arguments it
prints to stdout the full path of the executables that would have
been executed when this argument had been entered at the shell prompt.
It does this by searching for an executable or script in the
directories listed in the environment variable
.B PATH
using the same algorithm as bash(1).
.SH OPTIONS
.TP 4
.B "\-\-all, \-a"
Print
.I all
matching executables in PATH, not just the first.
.TP
.B "\-\-read\-alias, \-i"
Read aliases from stdin, reporting matching ones on stdout.
This is useful in combination with using an alias for
.B which
itself. For example
.IR "alias\ which='alias\ |\ which -i'" .
.TP
.B "\-\-skip-alias"
Ignore option
.BR "\-\-read-alias" ,
if any.  This is useful to explicity search for normal binaries, while
using the
.B "\-\-read-alias"
option in an alias for
.BR which .
.TP
.B "\-\-skip-dot"
Skip directories in
.B PATH
that start with a dot.
.TP
.B "\-\-skip-tilde"
Skip directories in
.B PATH
that start with a tilde and executables which reside in the HOME directory.
.TP
.B "\-\-show-dot"
If a directory in
.B PATH
starts with a dot and a matching executable was found for that path,
then print "./programname" rather than the full path.
.TP
.B "\-\-show-tilde"
Output a tilde when a directory matches the
.B HOME
directory.  This option is ignored when
.B which
is invoked as root.
.TP
.B "\-\-tty\-only"
Stop processing options on the right if not on tty.
.TP
.B "\-\-version, \-v, \-V"
Print version information on standard output then exit successfully.
.TP
.B "\-\-help"
Print usage information on standard output then exit successfully.
.SH RETURN VALUE
.BR Which
returns the number of failed arguments, or -1 when no
.I programname
was given.
.SH EXAMPLE
A useful way to use this utility is by adding an alias for
.B which
like the following:
.Sx 1
alias which='which --tty-only --show-tilde --show-dot'
.Ex
This will print the readable ~/ and ./ when starting which from your prompt,
while still printing the full path when used from a script:
.Sx 4
> which q2
~/bin/q2
> echo `which q2`
/home/carlo/bin/q2
.Ex
Aliases are also supported, through the use of an alias for
.B which
itself.  An example alias for
.B which
that is using this feature is as follows:
.Sx 1
alias which='alias | which --tty-only --read-alias --show-tilde --show-dot'
.Ex
This will print the output of
.B alias
for each alias that matches one of the given arguments.  For example, using
this alias on itself in a
. IR tcsh :
.Sx 4
$ alias which alias \\| /usr/bin/which -i !\\*
$ which which
which   (alias | ./which -i !*)
        /usr/bin/which
.Ex
.SH BUGS
The HOME directory is determined by looking for the HOME environment
variable,
.B which
aborts when this variable doesn't exist.
.B Which
will consider two equivalent directories to be different when one
of them contains a path with a symbolic link.
.SH AUTHOR
Carlo Wood <carlo@gnu.org>
.SH "SEE ALSO"
bash(1)
