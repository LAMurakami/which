\input texinfo   @c -*-texinfo-*-
@c %**start of header
@setfilename which.info
@settitle @command{which}: show full path of commands
@include version.texi
@c %**end of header

@setchapternewpage odd

@ifinfo
@format

@c !BEGIN INTRO
This file documents `which' version 2.x@.
@c !END INTRO

@c !BEGIN COPYING
Copyright @copyright{} 2000, by

Carlo Wood, Run on IRC <carlo@@alinoe.com>
RSA-1024 0x624ACAD5 1997-01-26                    Sign & Encrypt
Fingerprint16 = 32 EC A7 B6 AC DB 65 A6  F6 F6 55 DD 1C DC FF 61

Permission is granted to make and distribute verbatim copies of
this manual provided the copyright notice and this permission notice
are preserved on all copies.
@end format

@ignore
Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided also that the
section entitled ``GNU General Public License'' is included exactly as
in the original, and provided that the entire resulting derived work is
distributed under the terms of a permission notice identical to this
one.

Permission is granted to copy and distribute translations of this manual
into another language, under the above conditions for modified versions,
except that the section entitled ``GNU General Public License'' may be
included in a translation approved by the author instead of in the
original English.
@end ignore
@c !END COPYING
@end ifinfo

@titlepage
@title Which
@subtitle Show the full path of commands
@sp 1
@subtitle Edition @value{EDITION}, for Which Version @value{VERSION}
@subtitle @value{UPDATED}
@c !BEGIN AUTHORS
@author Carlo Wood <@email{carlo@gnu.org}>
@c !END AUTHORS
@page
@vskip 0pt plus 1filll
Copyright @copyright{} 2000, by

Carlo Wood, Run on IRC <carlo@@alinoe.com>
RSA-1024 0x624ACAD5 1997-01-26                    Sign & Encrypt
Fingerprint16 = 32 EC A7 B6 AC DB 65 A6  F6 F6 55 DD 1C DC FF 61

@end titlepage

@ifinfo
@node Top, Which Program, (dir), (dir)
@top @command{which}: Show the full path of commands

The @command{which} program
@c !BEGIN NAME
shows the full path of (shell) commands.
@c !END NAME

@noindent
This file documents @command{which} version @value{VERSION}, updated @value{UPDATED}.
@end ifinfo

@menu
* Which Program::               The @command{which} Program
* Invoking Which::              How to invoke @command{which}
* Option Summary::              Overview of commandline options
* Return Value::		The return value of @command{which}
* Example::			Examples of invokation
* Bugs::			Known bugs
* See Also::			Related UNIX commands
* Index::                       Index
@end menu

@node Which Program, Invoking Which, Top, Top
@chapter The @command{which} Program

@c !BEGIN DESCRIPTION
@command{Which} takes one or more arguments. For each of its arguments
it prints to stdout the full path of the executables
that would have been executed when this argument had been
entered at the shell prompt. It does this by searching
for an executable or script in the directories listed in
the environment variable @env{PATH} using the same algorithm as @command{bash(1)}.
@c !END DESCRIPTION

@node    Invoking Which, Option Summary, Which Program, Top
@chapter Invoking @command{which}

@noindent
The synopsis to invoke @command{which} is

@c !BEGIN SYNOPSIS
@example
which [options] [--] programname [...]
@end example
@c !END SYNOPSIS

@menu
* Option Summary::        Option summary
@end menu

@node    Option Summary, Return Value, Invoking Which, Top
@chapter Option Summary

@c !BEGIN OPTIONS
@table @samp
@item --all
@itemx -a
Print all matching executables in @env{PATH}, not just the first.

@item --read-alias
@itemx -i
Read aliases from stdin, reporting matching ones on
stdout. This is useful in combination with using an
alias for which itself. For example@*
@code{alias which='alias | which -i'}.

@item --skip-alias
Ignore option @option{--read-alias}, if any. This is useful to
explicity search for normal binaries, while using the
@option{--read-alias} option in an alias for which.

@item --skip-dot
Skip directories in @env{PATH} that start with a dot.

@item --skip-tilde
Skip directories in @env{PATH} that start with a tilde and
executables which reside in the @env{HOME} directory.

@item --show-dot
If a directory in @env{PATH} starts with a dot and a matching
executable was found for that path, then print
"./programname" rather than the full path.

@item --show-tilde
Output a tilde when a directory matches the @env{HOME}
directory. This option is ignored when which is
invoked as root.

@item --tty-only
Stop processing options on the right if not on tty.

@item --version, -v, -V
Print version information on standard output then exit
successfully.

@item --help
Print usage information on standard output then exit
successfully.

@end table
@c !END OPTIONS

@node    Return Value, Example, Option Summary, Top
@chapter Return Value

@c !BEGIN RETURNVALUE
@command{Which} returns the number of failed arguments, or -1 when
no @file{programname} was given.
@c !END RETURNVALUE

@node    Example, Bugs, Return Value, Top
@chapter Example

@c !BEGIN EXAMPLE
A useful way to use this utility is by adding an alias for
@command{which} like the following:

@example
@group
alias which='which --tty-only --show-tilde --show-dot'
@end group
@end example

@noindent
This will print the readable ~/ and ./ when starting which
from your prompt, while still printing the full path when
used from a script:

@example
@group
> which q2
~/bin/q2
> echo `which q2`
/home/carlo/bin/q2
@end group
@end example

Aliases are also supported, through the use of an alias
for which itself. An example alias for which that is
using this feature is as follows:

@example
@group
alias which='alias | which --tty-only --read-alias --show-tilde --show-dot'
@end group
@end example

@noindent
This will print the output of alias for each alias that
matches one of the given arguments. For example, using
this alias on itself in a tcsh:

@example
@group
$ alias which alias \| /usr/bin/which -i !\*
$ which which
which   (alias | ./which -i !*)
	/usr/bin/which
@end group
@end example
@c !END EXAMPLE

@node    Bugs, See Also, Example, Top
@chapter Bugs

@c !BEGIN BUGS
The @env{HOME} directory is determined by looking for the @env{HOME}
environment variable, which aborts when this variable
doesn't exist. @command{Which} will consider two equivalent directories
to be different when one of them contains a path
with a symbolic link.
@c !END BUGS

@node    See Also, Index, Bugs, Top
@chapter See Also

@c !BEGIN SEEALSO
@command{bash(1)}
@c !END SEEALSO

@node    Index,            ,  See Also, Top
@comment node-name,    next,  previous,       up
@unnumbered Index

@printindex cp

@contents
@bye
