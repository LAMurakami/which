#! /bin/sh

# Helps bootstrapping 'which' when checked out from CVS.
# Requires GNU autoconf, GNU automake and GNU which.
#
# Copyright (C) 2000 - 2002, by
#
# Carlo Wood, Run on IRC <carlo@alinoe.com>
# RSA-1024 0x624ACAD5 1997-01-26                    Sign & Encrypt
# Fingerprint16 = 32 EC A7 B6 AC DB 65 A6  F6 F6 55 DD 1C DC FF 61

if test ! -d CVS -a -f configure; then
  echo "You only need to run 'bootstrap' when you checked out this project using CVS."
  echo "Just run ./configure [--help]."
  exit 0
fi

os=`uname -s`

test -n "$ZSH_NAME" && disable which		# zsh has a builtin which that is turned off with this.
(which --version | grep GNU) >/dev/null 2>/dev/null || (echo "You need GNU which 2.x to install from CVS (http://www.xs4all.nl/~carlo17/which/ or ftp://ftp.gnu.org/gnu/which/)"; exit 1) || exit 1
(autoconf --version) >/dev/null 2>/dev/null || (echo "You need GNU autoconf to install from CVS (ftp://ftp.gnu.org/gnu/autoconf/)"; exit 1) || exit 1
(automake --version) >/dev/null 2>/dev/null || (echo "You need GNU automake 1.5 to install from CVS (ftp://ftp.gnu.org/gnu/automake/)"; exit 1) || exit 1

# Determine the version of automake.
automake_version=`automake --version | head -1 | sed -e 's/[^12]*\([12]\.[0-9][^ ]*\).*/\1/'`

# Require automake 1.5 because we use *_la_CXXFLAGS.
if expr "1.5" \> "$automake_version" >/dev/null; then
  automake --version | head -1
  echo "Fatal error: automake version 1.5 or higher is required."
  exit 1
fi

# Determine the installation paths of a few tools.
# This extracts from the automake script the two lines:
#   $prefix = "/usr";
#   $am_dir = "${prefix}/share/automake";
# OR (automake version 1.4):
#   $am_dir = "/usr/share/automake";
# OR (automake version 1.5):
#   my $libdir = "/usr/share/automake";
# OR (automake version 1.6):
#   my $libdir = "${prefix}/share/automake";
# OR (automake version 1.7):
#  my $libdir = '/usr/share/automake-1.7';
# and then puts "/usr/share/automake" into the variable automake_dir.
automake_path=`which automake`
automake_prefix=`egrep '(^my |^)\\$prefix = ' $automake_path | sed -e 's/.*"\(.*\)".*/\1/'`
automake_tmp=`egrep '(^my \\$libdir|^\\$am_dir) = ' $automake_path | sed -e 's/.*"\(\${prefix}\)\(.*\)".*/$automake_prefix\2/' | sed -e 's/.*['"'"'"]\([^'"'"'"]*\)['"'"'"].*/\1/'`
eval "automake_dir=$automake_tmp"
if test -f $automake_dir/depcomp; then
  automake_files="install-sh missing mkinstalldirs depcomp compile"
else
  automake_files="install-sh missing mkinstalldirs"
fi

# Generate automake/autoconf files:

echo "*** Generating automake/autoconf files:"
echo "    aclocal.m4 ..."
aclocal
echo "    config.h.in ..."
autoheader 2>&1 | egrep -v '(config.h.in.* is updated|config.h.in.* is unchanged|warning: AC_TRY_RUN|^WARNING:|^$)'
echo timestamp > stamp-h.in 2> /dev/null
echo "    configure ..."
autoconf 2>&1 | egrep -v 'warning: AC_TRY_RUN|warning: do not use m4_(patsubst|regexp):'
# The --add-missing --copy of automake is broken, so we do it ourselfs.
for i in $automake_files; do	# install-sh, missing, mkinstalldirs[, depcomp]
  test -f ./$i && cmp -s ./$i $automake_dir/$i || if true; then
    echo "    $i ..."
    cp $automake_dir/$i ./$i;
  fi
done
echo "    Makefile.in ..."
touch README ChangeLog
automake			# Makefile.in
rm README ChangeLog

# Sanity check
for i in aclocal.m4 config.h.in configure $automake_files; do
  if test ! -f $i; then
    echo "Warning: missing \"$i\" in `pwd`"
  fi
done

echo "*** done"
